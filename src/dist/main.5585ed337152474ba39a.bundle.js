!function(t){function e(e){for(var i,r,o=e[0],c=e[1],l=e[2],h=0,p=[];h<o.length;h++)r=o[h],Object.prototype.hasOwnProperty.call(a,r)&&a[r]&&p.push(a[r][0]),a[r]=0;for(i in c)Object.prototype.hasOwnProperty.call(c,i)&&(t[i]=c[i]);for(d&&d(e);p.length;)p.shift()();return n.push.apply(n,l||[]),s()}function s(){for(var t,e=0;e<n.length;e++){for(var s=n[e],i=!0,o=1;o<s.length;o++){var c=s[o];0!==a[c]&&(i=!1)}i&&(n.splice(e--,1),t=r(r.s=s[0]))}return t}var i={},a={0:0},n=[];function r(e){if(i[e])return i[e].exports;var s=i[e]={i:e,l:!1,exports:{}};return t[e].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=t,r.c=i,r.d=function(t,e,s){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)r.d(s,i,function(e){return t[e]}.bind(null,i));return s},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="";var o=window.webpackJsonp=window.webpackJsonp||[],c=o.push.bind(o);o.push=e,o=o.slice();for(var l=0;l<o.length;l++)e(o[l]);var d=c;n.push([35,1]),s()}({11:function(t,e,s){},12:function(t,e,s){},30:function(t,e,s){},31:function(t,e,s){},32:function(t,e,s){},33:function(t,e,s){},34:function(t,e,s){},35:function(t,e,s){"use strict";s.r(e);s(10),s(11),s(12);var i=s(0),a=s.n(i);const n=t=>{const e=localStorage.getItem(t);return e?JSON.parse(e):{}};var r=class{constructor(){this.config={headers:{"Content-Type":"application/json"}},this.url="api/auth/"}async controlExpiredGoals(){const t=Math.floor((new Date).getTime()/1e3),e=n("user").id;try{await a.a.post("api/goals/expire",{date:t,user_id:e},this.config)}catch(t){console.error("Error while trying to update expired goals")}}async submitLogin(t){const e=Math.floor((new Date).getTime()/1e3);var s,i;if(0!==t.length)try{let n=await a.a.post(this.url,{username:t},this.config);s="user",i={username:n.data.username,id:n.data.id},localStorage.setItem(s,JSON.stringify(i));const r={username:n.data.username};return await this.controlExpiredGoals(e,n.data.id),r}catch(t){throw Error("Something wrong with an API")}else console.warn("Input cant be empty")}checkForToken(){let t=n("user").username;return t?this.submitLogin(t):null}clearUser(){localStorage.removeItem("user")}};var o=class{constructor(t){this.loginWrapper=document.querySelector(".login-wrapper"),this.formSubmit=t.formSubmit,this.inputChange=t.inputChange,this.userLogout=t.userLogout}authSucceed(t){const{loginWrapper:e}=this;e.removeChild(e.lastChild);const s=document.createElement("span");s.innerText=t;const i=document.createElement("button");i.innerText="Logout",i.classList.add("btn","small","logout"),i.addEventListener("click",()=>{this.userLogout()});const a=document.createElement("img");a.src="./fonts/person.svg",a.classList.add("login-icon"),e.appendChild(a),e.appendChild(s),e.appendChild(i)}authFailed(){const{loginWrapper:t}=this;t.innerHTML="";let e=document.createElement("form");e.addEventListener("submit",t=>{t.preventDefault(),this.formSubmit()}),e.classList.add("form");let s=document.createElement("input");s.addEventListener("input",t=>{this.inputChange(t.target.value)}),s.classList.add("input","small");let i=document.createElement("input");i.setAttribute("type","submit"),i.setAttribute("value","Login"),i.classList.add("btn","small"),i.innerText="login",e.appendChild(s),e.appendChild(i),this.loginWrapper.appendChild(e)}};var c=class{constructor(){this.loginModel=new r,this.loginView=new o({inputChange:this.inputChange.bind(this),formSubmit:this.formSubmit.bind(this),userLogout:this.userLogout.bind(this)}),this.loginInput="",this.checkAuthStatus(),this.externalMethods={}}async checkAuthStatus(){const{loginModel:t,loginView:e}=this,s=await t.checkForToken();s?e.authSucceed(s.username):e.authFailed()}inputChange(t){this.loginInput=t}userLogout(){this.loginModel.clearUser(),this.loginView.authFailed(),this.externalMethods.clearExercises(),this.externalMethods.clearStatisticsMarkup(),this.externalMethods.clearGoalsHistory()}async formSubmit(){const t=await this.loginModel.submitLogin(this.loginInput);t&&(this.loginView.authSucceed(t.username),this.externalMethods.getExercises(),this.externalMethods.getTitles(),this.externalMethods.getStatisticsExercises(),this.externalMethods.getGoalsHistory())}setExternalMethods(t){this.externalMethods=t}};var l=class{constructor(t,e){this.errorInst=e,this.addBtnClick=t.addBtnClick,this.addButton=document.createElement("button"),this.exercise=document.createElement("div"),window.addEventListener("click",()=>{const t=document.querySelectorAll(".dropdown-content.active");t&&t.forEach(t=>t.classList.remove("active"))})}createExercise(){return this.addButton.innerText="Add",this.exercise.appendChild(this.addButton),this.exercise.appendChild(this.errorInst.getErrorMessage()),this.eventListeners(),this.addClasses(),this.exercise}addExerciseInstance(t){this.exercise.appendChild(t)}clearExercises(){document.querySelectorAll(".exercise-instance").forEach(t=>t.remove())}eventListeners(){this.addButton.addEventListener("click",this.addBtnClick)}addClasses(){this.exercise.classList.add("exercise"),this.addButton.classList.add("btn","big")}};var d=class{constructor(){this.url="api/exercise/getexercise",this.getTitlesUrl="api/exercise/exercisetitles"}async fetchExercise(){const t=n("user").id;if(!t)return;const e=Math.floor((new Date).getTime()/1e3),s=await a.a.get(this.url,{params:{user_id:t,date:e},headers:{"Content-Type":"application/json"}});return s.data?s.data.exercises:void 0}async getExerciseTitles(){const t=n("user").id;t&&(await a.a.get(this.getTitlesUrl,{params:{user_id:t},headers:{"Content-Type":"application/json"}})).data}};s(30);var h=class{constructor(t=0){this.seconds=t,this.timer=document.createElement("div"),this.timer.classList.add("timer"),this.hours=0,this.minutes=0,this.secs=this.seconds%60,this.intervalId=null,this.convertSeconds()}getAllSeconds(){return this.seconds}startTimer(){this.isRunning=!0,this.intervalId=setInterval(()=>{this.seconds+=1,this.changeTimer(this.seconds)},1e3)}stopTimer(){this.isRunning=!1,clearInterval(this.intervalId)}changeTimer(t){this.secs++,60===this.secs&&(this.minutes++,this.secs=0),60===this.minutes&&(this.hours++,this.minutes=0),this.formatTimer()}getTimer(){return this.formatTimer(),this.timer}formatTimer(){let t=this.hours<10?"0"+this.hours:this.hours,e=this.minutes<10?"0"+this.minutes:this.minutes,s=this.secs<10?"0"+this.secs:this.secs;this.timer.innerText=`${t}:${e}:${s}`}convertSeconds(){if(this.seconds<=59)this.secs=this.seconds;else if(this.seconds>59){let t=this.seconds%60,e=(this.seconds-t)/60;this.minutes=e,this.secs=t}if(this.minutes>59){let t=this.minutes%60,e=(this.minutes-t)/60;this.hours=e,this.minutes=t}}};var p=class{constructor(){this.config={headers:{"Content-Type":"application/json"}},this.url="api/exercise/",this.getTitlesUrl="api/exercisetitles"}async fetchTitles(t){const e=n("user").id;try{return(await a.a.get(this.getTitlesUrl,{params:{user_id:e,val:t},...this.config})).data}catch(t){throw new Error(t)}}async modelDeleteHandler(t){try{await a.a.delete(this.url,{params:{exercise_id:t},...this.config})}catch(t){throw new Error(t)}}async modelSaveHandler(t,e,s){const i=n("user").id,r=Math.floor((new Date).getTime()/1e3),o={title:t,user_id:i,seconds:e,date:r,exercise_id:s,last_update:r};try{if(!i)throw new Error("You need to login first");return{type:"success",payload:(await a.a.post(this.url,o,this.config)).data}}catch(t){return console.error(t.message),{type:"error",payload:t.message}}}},u="./fonts/clear.svg";var m=class{constructor(t,e,s=""){this.timer=e,this.saveIcon=document.createElement("img"),this.deleteIcon=document.createElement("img"),this.exerciseWrapper=document.createElement("div"),this.deleteBtn=document.createElement("div"),this.saveBtn=document.createElement("div"),this.input=document.createElement("input"),this.startBtn=document.createElement("button"),this.stopBtn=document.createElement("button"),this.list=document.createElement("ul"),this.dropdownContainer=document.createElement("div"),this.dropdownContent=document.createElement("div"),this.setInput=t.setInput,this.saveBtnClick=t.saveBtnClick,this.deleteBtnClick=t.deleteBtnClick,this.startBtnClick=t.startBtnClick,this.stopBtnClick=t.stopBtnClick,this.fetchTitles=t.fetchTitles,this.inputVal=s}createExerciseInstance(){return this.startBtn.innerText="Start",this.stopBtn.innerText="Stop",this.input.value=this.inputVal,this.deleteIcon.src=u,this.deleteIcon.alt="Delete",this.saveIcon.src="./fonts/save.svg",this.saveIcon.alt="Save",this.dropdownContainer.append(this.input),this.dropdownContainer.append(this.dropdownContent),this.deleteBtn.appendChild(this.deleteIcon),this.saveBtn.appendChild(this.saveIcon),this.exerciseWrapper.appendChild(this.deleteBtn),this.exerciseWrapper.appendChild(this.saveBtn),this.exerciseWrapper.appendChild(this.dropdownContainer),this.exerciseWrapper.appendChild(this.startBtn),this.exerciseWrapper.appendChild(this.stopBtn),this.exerciseWrapper.appendChild(this.timer.getTimer()),this.addClasses(),this.eventListeners(),this.toggleButtonAccess(),this.exerciseWrapper}eventListeners(){this.input.addEventListener("input",t=>{this.list.innerHTML="",this.setInput(t.target.value,"complex")}),this.saveBtn.addEventListener("click",this.saveBtnClick),this.deleteBtn.addEventListener("click",this.deleteBtnClick),this.startBtn.addEventListener("click",this.startBtnClick),this.stopBtn.addEventListener("click",this.stopBtnClick),this.dropdownContainer.addEventListener("click",t=>{t.stopPropagation(),this.dropdownContent.appendChild(this.createTitleList()),this.showDropDown()}),this.dropdownContainer.addEventListener("focusin",t=>{t.stopPropagation(),this.fetchTitles()}),this.dropdownContent.addEventListener("click",t=>{t.stopPropagation()}),this.list.addEventListener("click",t=>{"button"===t.srcElement.localName&&(this.setInput(t.target.innerText),this.input.value=t.target.innerText,this.hideDropDown())})}createTitleList(t=[]){return this.showDropDown(),t.forEach(t=>{const e=document.createElement("li"),s=document.createElement("button");s.innerText=t.title,e.appendChild(s),this.list.appendChild(e)}),this.list}toggleButtonAccess(t=!1){t?(this.startBtn.setAttribute("disabled","true"),this.stopBtn.removeAttribute("disabled")):(this.stopBtn.setAttribute("disabled","true"),this.startBtn.removeAttribute("disabled"))}showDropDown(){this.dropdownContent.classList.add("active")}hideDropDown(){this.list.innerHTML="",document.querySelectorAll(".dropdown-content").forEach(t=>t.classList.remove("active"))}addClasses(){this.exerciseWrapper.classList.add("exercise-instance"),this.saveIcon.classList.add("icon"),this.deleteIcon.classList.add("icon"),this.saveBtn.classList.add("icon-btn"),this.deleteBtn.classList.add("icon-btn","delete"),this.input.classList.add("exercise-input"),this.startBtn.classList.add("btn","small"),this.stopBtn.classList.add("btn","small","danger"),this.dropdownContainer.classList.add("dropdown"),this.dropdownContent.classList.add("dropdown-content"),this.list.classList.add("dd-list")}};var g=class{constructor(t,e){this.errorHandler=t,this.options=e,this.exerciseTimer=new h(this.options.timer),this.exerciseInstanceModel=new p,this.exerciseInstanceView=new m({setInput:this.setInput.bind(this),saveBtnClick:this.saveBtnClick.bind(this),deleteBtnClick:this.deleteBtnClick.bind(this),startBtnClick:this.startBtnClick.bind(this),stopBtnClick:this.stopBtnClick.bind(this),fetchTitles:this.fetchTitles.bind(this)},this.exerciseTimer,this.options.input),this.exercise_id=this.options.optionId||null,this.exerciseInput=this.options.input||"",this.exerciseUpdated=this.options.exerciseUpdated,this.fetchedTitles=[]}getMarkup(){return this.exerciseInstanceView.createExerciseInstance()}async setInput(t,e="plain"){this.fetchedTitles=[],"plain"!==e?(this.exerciseInput=t,await this.fetchTitles(t)):this.exerciseInput=t}async fetchTitles(t){if(0===this.fetchedTitles.length){if(t)return this.fetchedTitles=await this.exerciseInstanceModel.fetchTitles(t),void this.exerciseInstanceView.createTitleList(this.fetchedTitles.titles);this.fetchedTitles=await this.exerciseInstanceModel.fetchTitles(),this.exerciseInstanceView.createTitleList(this.fetchedTitles.titles)}}deleteBtnClick(t){let e=null,s=0;for(;s<=3;){if(e=t.target.parentNode,Array.from(e.classList).includes("exercise-instance"))break;e=e.parentNode,s++}e.parentNode.removeChild(e),this.exercise_id&&this.exerciseInstanceModel.modelDeleteHandler(this.exercise_id)}async saveBtnClick(){this.options.exerciseUpdated(this.exerciseInput);const t=this.exerciseTimer.getAllSeconds(),e=await this.exerciseInstanceModel.modelSaveHandler(this.exerciseInput,t,this.exercise_id);switch(e.type){case"success":return void(this.exercise_id=e.payload.exercise_id);case"error":return this.errorHandler(e.payload)}}startBtnClick(){this.exerciseTimer.startTimer(),this.exerciseInstanceView.toggleButtonAccess(!0)}stopBtnClick(){this.exerciseTimer.stopTimer(),this.exerciseInstanceView.toggleButtonAccess(!1)}};var x=class{constructor(){this.error=document.createElement("div"),this.error.classList.add("error"),this.timeout,this.hideError=()=>{clearTimeout(this.timeout),this.error.removeEventListener("click",this.hideError),this.error.classList.remove("show"),this.error.innerText=""}}showError(t){this.error.classList.add("show"),this.error.innerText=t,this.error.addEventListener("click",this.hideError),this.timeout=setTimeout(()=>{this.hideError()},4e3)}getErrorMessage(){return this.error}};var v=class{constructor(){this.errorInst=new x,this.exerciseView=new l({addBtnClick:this.addBtnClick.bind(this)},this.errorInst),this.exerciseModel=new d,this.markup=this.exerciseView.createExercise(),this.getExercises(),this.getExerciseTitles(),this.externalMethods={}}getMarkup(){return this.markup}addBtnClick(){this.createExerciseInstance()}handleError(t){this.errorInst.showError(t)}async getExercises(){this.exercises=await this.exerciseModel.fetchExercise(),this.exercises&&this.exercises.forEach(t=>{this.createExerciseInstance({input:t.title,timer:t.seconds,optionId:t.id})})}clearExercises(){this.exerciseView.clearExercises()}getExerciseTitles(){this.exerciseModel.getExerciseTitles()}exerciseUpdated(t){return this.externalMethods.setStatisticUpdate(t),{status:"Updated"}}createExerciseInstance(t={}){let e=new g(this.handleError.bind(this),{...t,exerciseUpdated:t=>this.exerciseUpdated(t)});this.exerciseView.addExerciseInstance(e.getMarkup())}setExternalMethods(t){this.externalMethods=t}},f=(s(31),t=>{let e=0,s=0,i=0;e=t,t>=60&&(s=Math.floor(t/60),e=t%60),s>=60&&(i=Math.floor(s/60),s%=60);let a="";return a+=0!==i?i+"h ":"",a+=0!==s?s+"m ":"",a+=0!==e?e+"s ":"",a});var E=class{constructor(t){this.statistics=document.createElement("div"),this.statisticsContent=document.createElement("div"),this.goalContent=document.createElement("div"),this.exerciseInfo=document.createElement("div"),this.exerciseTitle=document.createElement("span"),this.exerciseTime=document.createElement("span"),this.timeIntervals=document.createElement("div"),this.timeIntervalsList=document.createElement("ul"),this.exerciseList=document.createElement("ul"),this.exerciseClick=t.exerciseClick}createStatistics(){return this.statisticsContent.appendChild(this.exerciseInfo),this.statistics.appendChild(this.statisticsContent),this.statistics.appendChild(this.goalContent),this.addClasses(),this.eventListeners(),this.statistics}renderGoalContent(t){this.goalContent.innerHTML="",this.goalContent.appendChild(t)}renderStatisticsContent(t,e){this.exerciseTitle.innerText=t,this.exerciseTime.innerText="Total time: "+e,this.exerciseInfo.appendChild(this.exerciseTitle),this.exerciseInfo.appendChild(this.exerciseTime),this.statisticsContent.appendChild(this.exerciseInfo)}renderExerciseList(t){t.forEach(t=>{const e=document.createElement("li");e.innerText=t.title,this.exerciseList.appendChild(e)}),this.statistics.insertAdjacentElement("afterbegin",this.exerciseList)}renderTimeInterval(t){this.timeIntervals.innerHTML="",this.timeIntervalsList.innerHTML="";[{title:"Today:",value:0},{title:"Yesterday:",value:1},{title:"Last 3 days:",value:3},{title:"Last week:",value:7},{title:"Last 2 weeks:",value:14},{title:"Last 30 days:",value:30}].forEach(e=>{const s=((t,e)=>{let s=new Date((new Date).toISOString().split("T")[0]+"T00:00:00"),i=new Date;i.setDate(new Date(s).getDate()-t);let a=i.toISOString().split("T")[0],n=new Date(a+"T00:00:00"),r=0;return e.forEach(e=>{let i=new Date(e.date).toISOString().split("T")[0],a=new Date(i+"T00:00:00");(1===t&&a<s&&a>=n||1!==t&&a>=n)&&(r+=e.seconds)}),f(r)})(e.value,t),i=document.createElement("li"),a=document.createElement("div");a.classList.add("interval-data");const n=document.createElement("span"),r=document.createElement("span");n.innerText=e.title,r.innerText=s?""+s:"0s",a.appendChild(n),a.appendChild(r),i.appendChild(a),n.setAttribute("data-interval",e.value),this.timeIntervalsList.appendChild(i)}),this.timeIntervals.appendChild(this.timeIntervalsList),this.exerciseInfo.appendChild(this.timeIntervals)}clearMarkup(){this.statistics.innerHTML="",this.exerciseList.innerHTML=""}eventListeners(){this.exerciseList.addEventListener("click",t=>{"li"===t.srcElement.localName&&(this.exerciseList.childNodes.forEach(t=>t.classList.remove("active")),t.target.classList.add("active"),this.exerciseClick(t.target.innerText))})}addClasses(){this.statistics.classList.add("statistics"),this.statisticsContent.classList.add("statistics-content"),this.exerciseList.classList.add("statistics-list"),this.exerciseInfo.classList.add("exercise-info"),this.timeIntervals.classList.add("time-intervals"),this.timeIntervalsList.classList.add("time-intervals-list"),this.goalContent.classList.add("goal-content")}};var w=class{constructor(){this.headers={"Content-Type":"application/json"},this.url="api/statistics/",this.goal_url="api/goals/"}async fetchExercises(){const t=n("user").id;if(!t)return[];try{return(await a.a.get(this.url+"exercises",{params:{user_id:t},headers:this.headers})).data.exercises}catch(t){throw Error(t)}}async getStatistics(t){const e=n("user").id;if(e)try{return(await a.a.get(this.url,{params:{user_id:e,title:t},headers:this.headers})).data}catch(t){throw Error(t)}}async fetchGoals(){const t=n("user").id;if(!t)return;const e=Math.floor((new Date).getTime()/1e3);try{return(await a.a.get(this.goal_url,{params:{date:e,user_id:t},headers:this.headers})).data}catch(t){throw Error(t)}}};s(32);var L=class{constructor(){this.config={headers:{"Content-Type":"application/json"}},this.goalUrl="api/goals/"}async postGoal(t){let{timeHours:e,timeMins:s,deadline:i,title:r}=t;const o={user_id:n("user").id,created_at:Math.floor((new Date).getTime()/1e3),goal_time:60*(60*e+s),expiration:Math.floor((new Date).getTime()/1e3)+3600*i,time_spent:0,title:r};try{return(await a.a.post(this.goalUrl,o,this.config)).data}catch(t){throw new Error(t)}}async delGoal(t){try{await a.a.delete(this.goalUrl,{data:{id:t,user_id:n("user").id},...this.config})}catch(t){throw new Error(t)}}};var C=class{constructor(t){this.goalWidget=document.createElement("div"),this.addGoalBtn=document.createElement("button"),this.goalState=document.createElement("div"),this.goalGraph=document.createElement("div"),this.progressGraph=document.createElement("div"),this.timeStatistic=document.createElement("div"),this.modal=document.createElement("div"),this.formWrapper=document.createElement("div"),this.actions={addGoal:t.addGoal,delGoal:t.delGoal,infoGoal:t.infoGoal}}createGoals(){return this.addClasses(),this.addEventListeners(),this.showModal(),this.goalWidget}createGoalAdd(){this.addGoalBtn.innerText="Add Goal",this.goalWidget.appendChild(this.addGoalBtn),this.addGoalBtn.addEventListener("click",t=>{this.modal.classList.remove("hide")})}showModal(){this.formWrapper.classList.add("form-wrapper");this.formWrapper.innerHTML='\n        <form class="modal-form">\n          <input type="number" autocomplete="off" name="time-hours" placeholder=\'Goal time...(hours)\'/>\n          <input type="number" autocomplete="off" name="time-mins" placeholder=\'Goal time...(minutes)\'/>\n          <input type="number" autocomplete="off" name="deadline" placeholder=\'Timebound...(hours)\'/>\n          <input class="btn" type="submit" value="Add" />\n        </form>\n    ',this.modal.appendChild(this.formWrapper),document.body.insertAdjacentElement("afterbegin",this.modal)}hideModal(){this.modal.classList.add("hide");const t=document.querySelector(".modal-form");t.elements["time-hours"].value="",t.elements["time-mins"].value="",t.elements.deadline.value=""}createGoalGraph(t,e,s,i){const a=document.createElement("div"),n=document.createElement("div"),r=document.createElement("img"),o=document.createElement("img"),c=document.createElement("div"),l=document.createElement("span");c.appendChild(l);const d=document.createElement("div"),h=document.createElement("div"),p=document.createElement("div");a.classList.add("goal-state"),n.classList.add("goal-actions"),c.classList.add("info"),d.classList.add("goal-graph"),h.classList.add("progress-graph");let m="";0===t.hours?m="":m+="h ";let g="";g=0===t.mins?"0m":t.mins+"m";const x=100/(60*e+s)*t.total_mins||0;x.toFixed(1),h.style.width=x+"%",p.innerText=`${m+g}/${e}h ${s}m`,n.appendChild(r),n.appendChild(o),n.appendChild(c),r.src=u,r.addEventListener("click",()=>{this.actions.delGoal(i),a.remove()}),o.src="./fonts/info.svg",o.addEventListener("click",()=>{l.classList.contains("active")||(l.innerText=this.generateInfoText(i),l.classList.add("active"),setTimeout(()=>{l.classList.remove("active")},3e3))}),a.appendChild(n),a.appendChild(d),a.appendChild(p),d.appendChild(h),this.goalWidget.appendChild(a)}clearGoalState(){Array.from(this.goalWidget.children).forEach(t=>{"button"!==t.localName&&t.remove()})}generateInfoText(t){const e=this.actions.infoGoal(t);return`Expires in: ${e.hours}h ${e.mins}m`}addEventListeners(){this.modal.addEventListener("click",t=>{"modal"===t.target.classList.value&&this.hideModal()}),this.formWrapper.addEventListener("submit",t=>{t.preventDefault(),t.stopPropagation(),this.actions.addGoal({timeHours:parseInt(t.target.elements["time-hours"].value)||0,timeMins:parseInt(t.target.elements["time-mins"].value)||0,deadline:parseInt(t.target.elements.deadline.value)}),this.hideModal()})}addClasses(){this.goalWidget.classList.add("goal-widget"),this.addGoalBtn.classList.add("add-goal","btn"),this.modal.classList.add("modal","hide")}},y=t=>{const e={hours:0,mins:0,total_mins:0},s=Math.floor(t/60);return e.hours=Math.floor(s/60),e.mins=s%60,e.total_mins=s,e};var T=class{constructor(){this.goalModel=new L,this.goalView=new C({addGoal:this.addGoal.bind(this),delGoal:this.delGoal.bind(this),infoGoal:this.infoGoal.bind(this)}),this.markup=this.goalView.createGoals(),this.goals=[],this.currentExercise="",this.externalMethods={}}async addGoal(t){const e=await this.goalModel.postGoal({...t,title:this.currentExercise});e&&this.goalView.createGoalGraph({hours:0,mins:0},t.timeHours,t.timeMins,e.goal_id),this.externalMethods.fetchGoals()}infoGoal(t){let e={};return this.goals.forEach(s=>{s.id===t&&(e=this.calcExpiration(s.expiration))}),e}calcExpiration(t){const e=new Date(t.split("Z").join("0")).getTime()-(new Date).getTime(),s=Math.floor(e/6e4),i={hours:0,mins:0};return i.mins=s%60,i.hours=(s-i.mins)/60,i}delGoal(t){this.goalModel.delGoal(t),this.externalMethods.delGoal(t)}getMarkup(){return this.markup}renderAddButton(){this.goalView.createGoalAdd()}setCurrentExercise(t){this.currentExercise=t}setGoals(t){this.goalView.clearGoalState(),this.goals=t;for(let t of this.goals)if(t.title===this.currentExercise){const e=y(t.goal_time),s=y(t.time_spent);this.goalView.createGoalGraph(s,e.hours,e.mins,t.id)}}setExternalMethods(t){this.externalMethods=t}};var b=class{constructor(){this.statisticsView=new E({exerciseClick:this.exerciseClick.bind(this)}),this.statisticsModel=new w,this.markup=this.statisticsView.createStatistics(),this.activeExercise=null,this.exercisesStatistics={},this.goals=[],this.exercisesToUpdate=[],this.fetchExercises(),this.goalViewModel=new T,this.goalViewModel.setExternalMethods({fetchGoals:this.fetchGoals.bind(this),delGoal:this.delGoal.bind(this)})}getMarkup(){return this.fetchGoals(),this.markup}fetchGoals(){this.statisticsModel.fetchGoals().then(t=>{this.goals=t.active_goals,this.updateGoalsWidget()}).catch(t=>console.log(t))}clearMarkup(){this.statisticsView.clearMarkup()}setStatisticsUpdate(t){this.exercisesToUpdate.push(t)}async exerciseClick(t){if(!(t in this.exercisesStatistics)||t in this.exercisesStatistics&&this.exercisesToUpdate.includes(t)){const e=await this.statisticsModel.getStatistics(t);this.exercisesStatistics={...this.exercisesStatistics,[t]:{stats:e.stats,total:e.total_time.total}},this.exercisesToUpdate=this.exercisesToUpdate.filter(e=>e!==t)}this.activeExercise=t,this.statisticsView.renderStatisticsContent(t,f(this.exercisesStatistics[t].total)),this.statisticsView.renderTimeInterval(this.exercisesStatistics[t].stats),this.goalViewModel.setCurrentExercise(t),this.goalViewModel.renderAddButton(),this.updateGoalsWidget()}delGoal(t){this.goals=this.goals.filter(e=>e.id!==t)}updateGoalsWidget(){this.goalViewModel.setGoals(this.goals);const t=this.goalViewModel.getMarkup();this.statisticsView.renderGoalContent(t)}async fetchExercises(){const t=await this.statisticsModel.fetchExercises();t.length>0&&this.statisticsView.renderExerciseList(t)}};s(33),s(34);var M=class{constructor(){this.headers={"Content-Type":"application/json"},this.url="api/goalshistory/",this.fetchGoalsLength()}async fetchGoalExercises(){const t=n("user").id;try{return(await a.a.get(this.url+"/all",{params:{user_id:t},headers:this.headers})).data}catch(t){console.error(t.response.data)}}async fetchGoals(t,e){const s=n("user").id;try{return(await a.a.get(this.url,{params:{user_id:s,spec:e,term:t},headers:this.headers})).data}catch(t){console.error(t.response.data)}}async fetchGoalsLength(){const t=n("user").id;try{return(await a.a.get(this.url+"total",{params:{user_id:t},headers:this.headers})).data}catch(t){console.error(t.response.data)}}static async fetchGoalsByPage(t){const e=n("user").id;try{return(await a.a.get("api/goalshistory/"+t,{params:{user_id:e},headers:this.headers})).data}catch(t){console.error(t.response.data)}}};var k=class{constructor(t,e){this.pagination=document.createElement("div"),this.pagination.classList.add("pagination"),this.length=t,this.per_page=e,this.pagination_elems=[]}get_widget(){if(Math.ceil(this.length/this.per_page)<=1)return this.pagination;for(let t=1;t<=Math.ceil(this.length/this.per_page);t++){let e=document.createElement("span");e.innerText=t,this.pagination_elems.push(e)}this.pagination_elems[0].classList.add("active");for(let t of this.pagination_elems)this.pagination.appendChild(t),t.addEventListener("click",()=>{this.pagination_elems.forEach(t=>t.classList.remove("active")),t.classList.add("active"),this.switch_page(t.innerText)});return this.pagination}get_table(){return this.table}switch_page(t){M.fetchGoalsByPage(t).then(t=>this.change_table_content(t))}set_external_data(t,e){this.table=t,this.goals=e}change_table_content(t){let e="";for(let s of t){const{title:t,created_at:i,goal_time:a,time_spent:n,expired:r}=s;let o=n/a*100;e+=`\n      <tr ${1===r&&n<a?'style="color: #f32013;"':""}>\n        <td data-label="Title">${t}</td>\n        <td data-label="Created at">${i.split("T")[0]}</td>\n        <td data-label="Goal Time">${f(a)}</td>\n        <td data-label="Time spent">${f(n)}(${o.toFixed(2)}%)</td>\n        <td data-label="In progress">${0===r?"Yes":"No"}</td>\n      </tr>\n      `}this.table.innerHTML=`\n    <thead>\n      <tr>  \n        <th>Title</th>\n        <th>Created at</th>\n        <th>Goal time</th>\n        <th>Time spent</th>\n        <th>In Progress</th>\n      </tr>\n    </thead>\n    <tbody>\n      ${e}\n    </tbody>\n    `}};var G=class{constructor(t){this.goalsHistory=document.createElement("div"),this.accordion=document.createElement("div"),this.options=document.createElement("div"),this.days=["1 Day","3 Days","7 Days","30 Days","More"],this.exercises=[],this.actions=t}createGoalsHistory(){return this.createSwitch(),this.renderAccordion(this.options.dataset.option,this.days),this.renderGoalsHistory(),this.addClasses(),this.goalsHistory}createSwitch(){const t=document.createElement("div"),e=document.createElement("span"),s=document.createElement("div"),i=document.createElement("div");e.innerText="Display goals by: ",s.innerText="Timeline",i.innerText="Exercises",t.classList.add("options-switch"),this.options.dataset.option="timeline",s.classList.add("timeline","opt-instance"),i.classList.add("switch-exercise","opt-instance"),s.addEventListener("click",()=>{"timeline"!==this.options.dataset.option&&(this.renderAccordion("timeline",this.days),this.options.dataset.option="timeline",this.options.classList.remove("second"),this.options.classList.add("first"))}),i.addEventListener("click",()=>{"exercises"!==this.options.dataset.option&&(this.renderAccordion("exercises",this.actions.getExerciseGoalsList()),this.options.dataset.option="exercises",this.options.classList.remove("first"),this.options.classList.add("second"))}),this.options.appendChild(s),this.options.appendChild(i),t.appendChild(e),t.appendChild(this.options),this.goalsHistory.appendChild(t)}createAccordion(t,e){for(let s of e){const e=document.createElement("div"),i=document.createElement("div"),a=document.createElement("div");e.classList.add("content-box"),i.classList.add("label"),a.classList.add("content"),i.innerText=s,i.addEventListener("click",()=>{if(e.classList.toggle("active"),0===a.childNodes.length)this.actions.fetchGoals(t,s,a,s,this.createAccordionContentList);else for(;0!==a.childNodes.length;)a.removeChild(a.childNodes[0])}),e.appendChild(i),e.appendChild(a),this.accordion.appendChild(e)}}createAccordionContentList(t,e,s,i){const a=new k(i,10),n=document.createElement("table");n.classList.add("table");let r="";for(let t of e){const{title:e,created_at:s,goal_time:i,time_spent:a,expired:n}=t;let o=a/i*100;r+=`\n      <tr ${1===n&&a<i?'style="color: #f32013;"':""}>\n        <td data-label="Title">${e}</td>\n        <td data-label="Created at">${s.split("T")[0]}</td>\n        <td data-label="Goal Time">${f(i)}</td>\n        <td data-label="Time spent">${f(a)}(${o.toFixed(2)}%)</td>\n        <td data-label="In progress">${0===n?"Yes":"No"}</td>\n      </tr>\n      `}n.innerHTML=`\n    <thead>\n      <tr>  \n        <th>Title</th>\n        <th>Created at</th>\n        <th>Goal time</th>\n        <th>Time spent</th>\n        <th>In Progress</th>\n      </tr>\n    </thead>\n    <tbody>\n      ${r}\n    </tbody>\n    `,"More"===s?(a.set_external_data(n,e),t.appendChild(a.get_table()),t.appendChild(a.get_widget())):t.appendChild(n)}renderAccordion(t,e){if(this.accordion.childNodes.length>0)for(;0!==this.accordion.childNodes.length;)this.accordion.removeChild(this.accordion.childNodes[0]);this.createAccordion(t,e)}renderGoalsHistory(){this.goalsHistory.appendChild(this.accordion)}clearMarkup(){this.goalsHistory.innerHTML=""}addClasses(){this.goalsHistory.classList.add("goalshistory"),this.accordion.classList.add("accordion"),this.options.classList.add("options","first")}addEventListeners(){}};var I=class{constructor(){this.goalsHistoryView=new G({fetchGoals:this.fetchGoals.bind(this),getExerciseGoalsList:this.getExerciseGoalsList.bind(this)}),this.goalsHistoryModel=new M,this.markup=this.goalsHistoryView.createGoalsHistory(),this.goalsHistory={},this.goal_exercises_list=[],this.more_goals_amount=0}async fetchGoals(t,e,s,i,a){if("More"===e&&!this.goalsHistory.More){const t=await this.goalsHistoryModel.fetchGoalsLength();this.more_goals_amount=t;let e=await M.fetchGoalsByPage(1);return this.goalsHistory.More=e,void a(s,this.goalsHistory.More,i,this.more_goals_amount)}let n=null;if(n=parseInt(e.split(" ")[0])?e.split(" ")[0]:e,n in this.goalsHistory)return void a(s,this.goalsHistory[n],i,this.more_goals_amount);const r=await this.goalsHistoryModel.fetchGoals(t,n);this.goalsHistory[n]=r,a(s,r,i,this.more_goals_amount)}getMarkup(){return 0===this.goal_exercises_list.length&&this.goalsHistoryModel.fetchGoalExercises().then(t=>{this.goal_exercises_list=t.map(t=>t.title)}),this.markup}getExerciseGoalsList(){return this.goal_exercises_list}clearGoalsHistory(){this.goalsHistoryView.clearMarkup()}getGoalsHistory(){this.goalsHistoryView.renderGoalsHistory()}};var _=class{constructor(t){this.components=t,this.activeLink=null,this.workSpace=document.querySelector(".workspace"),this.path=window.location.pathname,this.routerLinks=document.querySelectorAll(".router-link"),this.routerLinks.forEach(t=>{t.getAttribute("href")===this.path&&(this.activeLink=t,this.activeLink.classList.add("active")),t.addEventListener("click",t=>this.linkEvent(t))}),window.addEventListener("popstate",t=>{let e=t.state||"/";this.routerLinks.forEach(t=>{t.getAttribute("href")===e&&this.highlightActiveLink(t)}),this.renderComponent(e,"freeze")}),this.renderComponent(this.path,"freeze")}linkEvent(t){t.preventDefault(),this.path=t.target.getAttribute("href"),this.highlightActiveLink(t.target),this.renderComponent(this.path,"push")}highlightActiveLink(t){this.activeLink.classList.remove("active"),t.classList.add("active"),this.activeLink=t}renderComponent(t,e="push"){const{components:s,workSpace:i}=this;let a=null;for(let e of s)e.path===t&&(a=e.component);let n=a.getMarkup();0!==i.childNodes.length&&i.removeChild(i.childNodes[0]),i.appendChild(n),"push"===e&&window.history.pushState(t,"",t)}};(new class{constructor(){}init(){const t=new c,e=new v,s=new I,i=new b;t.setExternalMethods({getExercises:e.getExercises.bind(e),clearExercises:e.clearExercises.bind(e),getTitles:e.getExerciseTitles.bind(e),getStatisticsExercises:i.fetchExercises.bind(i),clearStatisticsMarkup:i.clearMarkup.bind(i),getGoalsHistory:s.getGoalsHistory.bind(s),clearGoalsHistory:s.clearGoalsHistory.bind(s)}),e.setExternalMethods({setStatisticUpdate:i.setStatisticsUpdate.bind(i)}),new _([{component:i,path:"/statistics"},{component:s,path:"/goalshistory"},{component:e,path:"/"}])}}).init()}});